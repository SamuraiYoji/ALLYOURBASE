using System;
using System.Collections.Generic;

namespace Mastermind
{
    class Program
    {
        static void Main(string[] args)
        {
            // Player has 10 attmepts to guess the number correctly
            int MaximumTurns = 10;
            int CurrentTurn = 0;
            bool GuessIsCorrect = false;

            string num1 = "";
            string num2 = "";
            string num3 = "";
            string num4 = "";

            string answerDigits = GenerateRandomAnswerDigitString();

            Console.WriteLine("Using only digits from 1 to 6, you will have 10 attempts to guess the correct 4 digit combination.");

            while (!GuessIsCorrect && CurrentTurn < MaximumTurns)
            {
                Console.WriteLine("Enter your guess (" + CurrentTurn.ToString() +"/10) now:");

                num1 = Console.ReadKey().KeyChar.ToString();
                num2 = Console.ReadKey().KeyChar.ToString();
                num3 = Console.ReadKey().KeyChar.ToString();
                num4 = Console.ReadKey().KeyChar.ToString();

                Console.WriteLine(Environment.NewLine);

                if (num1 + num2 + num3 + num4 == answerDigits.ToString())
                {
                    GuessIsCorrect = true;
                }

                string returnMessage = "[" + CheckDigitEntered(0, num1, answerDigits) + "," + CheckDigitEntered(1, num2, answerDigits) + "," + CheckDigitEntered(2, num3, answerDigits) + "," + CheckDigitEntered(3, num4, answerDigits) + "]";

                Console.WriteLine(returnMessage);

                CurrentTurn++;
            }
            
            if (GuessIsCorrect)
            {
                Console.WriteLine("You figured it out on the "+ CurrentTurn +"/10 th turn!! --> " + answerDigits + " <--");
            }
            
            if (!GuessIsCorrect && CurrentTurn == MaximumTurns)
            {
                Console.WriteLine("You haven't figured out the correct combination in 10 turns. You have lost.");
            }
            
        }

        // After combination is entered display a (-) for every digit that is correct but, in the wrong position
        // Display a (+) for every digit that is both correct and in the correct position
        // Nothing is displayed for incorrect digits
        public static string CheckDigitEntered(int order, string digit, string answerDigits)
        {
            string returnCharacter = " ";
            int i = 0;

            try
            {
                if (Convert.ToInt32(digit) > 0 && Convert.ToInt32(digit) < 7)
                {
                    foreach (var digits in answerDigits)
                    {
                        if (Convert.ToInt32(digit) == Convert.ToInt32(answerDigits[i].ToString()))
                        {
                            if (order == i)
                            {
                                returnCharacter = "+";
                            }
                            else
                            {
                                returnCharacter = "-";
                            }
                        }
                        i++;
                    }
                }
            }
            catch (Exception ex)
            {
                return returnCharacter;
            }

            return returnCharacter;
        }

        // Randomly generated answers (4) Digits in length, each digit between the numbers of 1 and 6
        public static string GenerateRandomAnswerDigitString()
        {
            string digit = "";

            Random randomDigits = new Random();

            for (int i = 0; i < 4; i++)
            {
                digit = digit.Insert(digit.Length, randomDigits.Next(1, 6).ToString());
            }

            return digit;
        }
    }
}
